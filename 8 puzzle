/*To solve the 8 puzzle game using the manhattan number concept*/
int manh1() {		\\ calculate manhattan number
   int m=0,k,l,n1,n2;
   for(k=0;k<3;k++)
   for(l=0;l<3;l++) {
   if(puzzle1[k][l]==0)
   continue;
   n1=puzzle1[k][l]/3;
   if((puzzle1[k][l]%3)==0)
   n1--;
   n2=puzzle1[k][l]-n1*3 - 1;
   m+= abs(n1-k) + abs(n2-l);
   }
   
   return m;  
     
}

int main(void) {
/*---------main---------*/
 while(manh) 		\\ To find out the next potential step to solve the 8 puzzle using AI
    {
                  
                                   
                  k=0;
                  if((a-1)>-1)
                  {
                  c1=a-1;
                  temp=puzzle1[c1][b];
                  puzzle1[c1][b]=puzzle1[a][b];
                  puzzle1[a][b]=temp;
                  m[k]=manh1();
                  c[k]='a';
                  k++;
                  temp=puzzle1[c1][b];
                  puzzle1[c1][b]=puzzle1[a][b];
                  puzzle1[a][b]=temp;
                  }
                  if((a+1)<3)
                  {
                  c1=a+1;
                  temp=puzzle1[c1][b];
                  puzzle1[c1][b]=puzzle1[a][b];
                  puzzle1[a][b]=temp;
                  m[k]=manh1();
                  c[k]='b';
                  k++;
                  temp=puzzle1[c1][b];
                  puzzle1[c1][b]=puzzle1[a][b];
                  puzzle1[a][b]=temp;
                  
                  }
                  if((b-1)>-1)
                  {
                  c1=b-1;
                  temp=puzzle1[a][c1];
                  puzzle1[a][c1]=puzzle1[a][b];
                  puzzle1[a][b]=temp;
                  m[k]=manh1();
                  c[k]='c';
                  k++;
                  temp=puzzle1[a][c1];
                  puzzle1[a][c1]=puzzle1[a][b];
                  puzzle1[a][b]=temp;
                  
                  }
                  if((b+1)<3)
                  {
                  c1=b+1;
                  temp=puzzle1[a][c1];
                  puzzle1[a][c1]=puzzle1[a][b];
                  puzzle1[a][b]=temp;
                  m[k]=manh1();
                  c[k]='d';
                  k++;
                  temp=puzzle1[a][c1];
                  puzzle1[a][c1]=puzzle1[a][b];
                  puzzle1[a][b]=temp;
                                    
                  }
                  
                  greater=gr(k);
                  
                  switch(c[greater])
                  {
                                    case 'a':
                                         c1=a-1;
                                         temp=puzzle1[c1][b];
                                         puzzle1[c1][b]=puzzle1[a][b];
                                         puzzle1[a][b]=temp;
                                         a--;
                                         break;
                                    case 'b':
                                         c1=a+1;
                                         temp=puzzle1[c1][b];
                                         puzzle1[c1][b]=puzzle1[a][b];
                                         puzzle1[a][b]=temp;
                                         a++;
                                         break;
                                    case 'c':
                                         c1=b-1;
                                         temp=puzzle1[a][c1];
                                         puzzle1[a][c1]=puzzle1[a][b];
                                         puzzle1[a][b]=temp;
                                         b--;
                                         break;
                                    case 'd':
                                         c1=b+1;
                                         temp=puzzle1[a][c1];
                                         puzzle1[a][c1]=puzzle1[a][b];
                                         puzzle1[a][b]=temp;
                                         b++;
                                         break;
                                                                       
                                    
                  }
                  manh=manh1();
                  step++;
                  printf("\nAfter step %d :\n",step);
                  for(x=0;x<3;x++)
                  {
                  for(y=0;y<3;y++)
                  printf("%d\t",puzzle1[x][y]);
                  printf("\n");
                  }
                  
                  
    }
 }
